{"ast":null,"code":"import React from \"react\";\nimport axios from \"axios\";\nfunction WeatherAPI(cityName, units) {\n  const API_LINK = \"https://api.openweathermap.org/data/2.5/forecast?q=\";\n  const API_CITY = cityName;\n  const API_KEY = \"&appid=27e27f3b62720afb770645ec7ae89aa7\";\n  const API_UNITS = units === false ? \"&units=metric\" : \"&units=imperial\";\n  const API_LANG = \"&lang=pl\";\n  const API_URL = API_LINK + API_CITY + API_UNITS + API_KEY;\n  let tabWeek = [];\n  axios.get(API_URL).then(res => {\n    for (let i = 0; i < 40; i++) {\n      let date = res.data.list[i].dt_txt;\n      let [datePart, timePart] = date.split(\" \");\n      tabWeek.push(tabDay);\n    }\n\n    // let morning = '06:00:00';\n    // let afternoon = '12:00:00';\n    // let evening = '18:00:00';\n    // let night = '21:00:00';\n    // let dayTab = [morning, afternoon, evening, night];\n    // console.log(res.data);\n\n    // for (let k = 1; k <= 5; k +=1 ) {\n    // for (let j = 1; j <= 8; j += 1) {\n    //   let iterator = j*k-1;\n    //   // for (let i = 0; i < dayTab.length; i+=2) {\n    //   console.log(j);\n    //   console.log(res.data.list[iterator]);\n    //   console.log(res.data.list[iterator].main[\"preasure\"]); //ciśnienie,\n    //   console.log(res.data.list[iterator].main[\"humidity\"]); //wilgotność\n    //   console.log(res.data.list[iterator].main[\"temp\"]); //temperatura\n    //   console.log(res.data.list[iterator].weather[\"id\"]); //status pogody - ikona\n    //   console.log(res.data.list[iterator].dt_txt); //status pogody - ikona\n\n    //   let date = res.data.list[iterator].dt_txt;\n    //   let [datePart, timePart] = date.split(\" \");\n\n    //   // for(let i=0; i< dayTab.length; i++){\n    //   //   if(dayTab[i] == timePart){\n\n    //   //   }\n    //   // }\n\n    //   let status = res.data.list[iterator].weather[\"id\"];\n    //   let humidity = res.data.list[iterator].main[\"humidity\"];\n    //   let preasure = res.data.list[iterator].main[\"preasure\"];\n    //   //let date = res.data.list[dayTab[0] + j].dt_txt;\n    //   date = date.slice(0, 10);\n\n    //   let tempMor = res.data.list[iterator].main[\"temp\"];\n    //   let tempEvn = res.data.list[iterator].main[\"temp\"];\n\n    //   let tabDay = [date, tempMor, tempEvn, preasure, humidity, status];\n\n    //   tabWeek.push(tabDay);\n\n    //   // return (\n    //   //   <div id=\"exampleCity\">\n    //   //     <div key={j - 7} className=\"App-panel2\">\n    //   //       <h3>{date}</h3>\n    //   //       <div className=\"App-degree\">\n    //   //         <p>tempMor&deg;C / tempEvn&deg;C</p>\n    //   //       </div>\n    //   //       <div>\n    //   //         {/* <img src={sun} alt=\"sun\" className=\"App-icon\" /> */}\n    //   //       </div>\n    //   //     </div>\n    //   //   </div>\n    //   // );\n    //   }\n    // }\n    //return tabWeek;\n    // console.log(res.data.list[afternoon]);\n    // console.log(res.data.list[evening]);\n    // console.log(res.data.list[night]);\n    //console.log(res.data.main['temp']);\n  }).catch(error => {\n    console.error(\"Błąd pobierania prognozy pogody:\", error);\n  });\n  return tabWeek;\n  //  return (\n  //    <div id=\"exampleCity\">\n  //      <div className=\"App-panel2\">\n  //        <h3>XD</h3>\n  //        <div className=\"App-degree\">\n  //          <p>tempMor&deg;C / tempEvn&deg;C</p>\n  //        </div>\n  //        <div>{/* <img src={sun} alt=\"sun\" className=\"App-icon\" /> */}</div>\n  //      </div>\n  //    </div>\n  //  );\n}\n_c = WeatherAPI;\nexport default WeatherAPI;\nvar _c;\n$RefreshReg$(_c, \"WeatherAPI\");","map":{"version":3,"names":["React","axios","WeatherAPI","cityName","units","API_LINK","API_CITY","API_KEY","API_UNITS","API_LANG","API_URL","tabWeek","get","then","res","i","date","data","list","dt_txt","datePart","timePart","split","push","tabDay","catch","error","console","_c","$RefreshReg$"],"sources":["C:/Users/SUPER PC/Desktop/weather-app/weather-app/src/scripts/WeatherAPI.js"],"sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction WeatherAPI(cityName, units) {\r\n  const API_LINK = \"https://api.openweathermap.org/data/2.5/forecast?q=\";\r\n  const API_CITY = cityName;\r\n  const API_KEY = \"&appid=27e27f3b62720afb770645ec7ae89aa7\";\r\n  const API_UNITS = units === false ? \"&units=metric\" : \"&units=imperial\";\r\n  const API_LANG = \"&lang=pl\";\r\n\r\n  const API_URL = API_LINK + API_CITY + API_UNITS + API_KEY;\r\n  let tabWeek = [];\r\n  axios\r\n    .get(API_URL)\r\n    .then((res) => {\r\n      for (let i = 0; i < 40; i++) {\r\n        let date = res.data.list[i].dt_txt;\r\n        let [datePart, timePart] = date.split(\" \");\r\n        tabWeek.push(tabDay);\r\n      }\r\n\r\n      // let morning = '06:00:00';\r\n      // let afternoon = '12:00:00';\r\n      // let evening = '18:00:00';\r\n      // let night = '21:00:00';\r\n      // let dayTab = [morning, afternoon, evening, night];\r\n      // console.log(res.data);\r\n\r\n      // for (let k = 1; k <= 5; k +=1 ) {\r\n      // for (let j = 1; j <= 8; j += 1) {\r\n      //   let iterator = j*k-1;\r\n      //   // for (let i = 0; i < dayTab.length; i+=2) {\r\n      //   console.log(j);\r\n      //   console.log(res.data.list[iterator]);\r\n      //   console.log(res.data.list[iterator].main[\"preasure\"]); //ciśnienie,\r\n      //   console.log(res.data.list[iterator].main[\"humidity\"]); //wilgotność\r\n      //   console.log(res.data.list[iterator].main[\"temp\"]); //temperatura\r\n      //   console.log(res.data.list[iterator].weather[\"id\"]); //status pogody - ikona\r\n      //   console.log(res.data.list[iterator].dt_txt); //status pogody - ikona\r\n\r\n      //   let date = res.data.list[iterator].dt_txt;\r\n      //   let [datePart, timePart] = date.split(\" \");\r\n\r\n      //   // for(let i=0; i< dayTab.length; i++){\r\n      //   //   if(dayTab[i] == timePart){\r\n\r\n      //   //   }\r\n      //   // }\r\n\r\n      //   let status = res.data.list[iterator].weather[\"id\"];\r\n      //   let humidity = res.data.list[iterator].main[\"humidity\"];\r\n      //   let preasure = res.data.list[iterator].main[\"preasure\"];\r\n      //   //let date = res.data.list[dayTab[0] + j].dt_txt;\r\n      //   date = date.slice(0, 10);\r\n\r\n      //   let tempMor = res.data.list[iterator].main[\"temp\"];\r\n      //   let tempEvn = res.data.list[iterator].main[\"temp\"];\r\n\r\n      //   let tabDay = [date, tempMor, tempEvn, preasure, humidity, status];\r\n\r\n      //   tabWeek.push(tabDay);\r\n\r\n      //   // return (\r\n      //   //   <div id=\"exampleCity\">\r\n      //   //     <div key={j - 7} className=\"App-panel2\">\r\n      //   //       <h3>{date}</h3>\r\n      //   //       <div className=\"App-degree\">\r\n      //   //         <p>tempMor&deg;C / tempEvn&deg;C</p>\r\n      //   //       </div>\r\n      //   //       <div>\r\n      //   //         {/* <img src={sun} alt=\"sun\" className=\"App-icon\" /> */}\r\n      //   //       </div>\r\n      //   //     </div>\r\n      //   //   </div>\r\n      //   // );\r\n      //   }\r\n      // }\r\n      //return tabWeek;\r\n      // console.log(res.data.list[afternoon]);\r\n      // console.log(res.data.list[evening]);\r\n      // console.log(res.data.list[night]);\r\n      //console.log(res.data.main['temp']);\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Błąd pobierania prognozy pogody:\", error);\r\n    });\r\n\r\n  return tabWeek;\r\n  //  return (\r\n  //    <div id=\"exampleCity\">\r\n  //      <div className=\"App-panel2\">\r\n  //        <h3>XD</h3>\r\n  //        <div className=\"App-degree\">\r\n  //          <p>tempMor&deg;C / tempEvn&deg;C</p>\r\n  //        </div>\r\n  //        <div>{/* <img src={sun} alt=\"sun\" className=\"App-icon\" /> */}</div>\r\n  //      </div>\r\n  //    </div>\r\n  //  );\r\n}\r\n\r\nexport default WeatherAPI;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,UAAUA,CAACC,QAAQ,EAAEC,KAAK,EAAE;EACnC,MAAMC,QAAQ,GAAG,qDAAqD;EACtE,MAAMC,QAAQ,GAAGH,QAAQ;EACzB,MAAMI,OAAO,GAAG,yCAAyC;EACzD,MAAMC,SAAS,GAAGJ,KAAK,KAAK,KAAK,GAAG,eAAe,GAAG,iBAAiB;EACvE,MAAMK,QAAQ,GAAG,UAAU;EAE3B,MAAMC,OAAO,GAAGL,QAAQ,GAAGC,QAAQ,GAAGE,SAAS,GAAGD,OAAO;EACzD,IAAII,OAAO,GAAG,EAAE;EAChBV,KAAK,CACFW,GAAG,CAACF,OAAO,CAAC,CACZG,IAAI,CAAEC,GAAG,IAAK;IACb,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;MAC3B,IAAIC,IAAI,GAAGF,GAAG,CAACG,IAAI,CAACC,IAAI,CAACH,CAAC,CAAC,CAACI,MAAM;MAClC,IAAI,CAACC,QAAQ,EAAEC,QAAQ,CAAC,GAAGL,IAAI,CAACM,KAAK,CAAC,GAAG,CAAC;MAC1CX,OAAO,CAACY,IAAI,CAACC,MAAM,CAAC;IACtB;;IAEA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;;IAEA;IACA;;IAEA;IACA;;IAEA;IACA;IACA;IACA;IACA;;IAEA;IACA;;IAEA;;IAEA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACF,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;IAChBC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;EAC1D,CAAC,CAAC;EAEJ,OAAOf,OAAO;EACd;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF;AAACiB,EAAA,GAhGQ1B,UAAU;AAkGnB,eAAeA,UAAU;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}