{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SUPER PC\\\\Desktop\\\\weather-app\\\\weather-app\\\\src\\\\pages\\\\WeatherForcast.js\",\n  _s = $RefreshSig$();\nimport logo from \"../img/logo2.png\";\nimport sun from \"../img/weather-icons/sun.png\";\nimport \"../App.css\";\nimport \"../styles/WeatherForcast-style.css\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport WeatherAPI from \"../scripts/WeatherAPI\";\nimport Layout from \"../layout/layout\";\nimport WeatherAPIConf from \"../scripts/WeatherAPIConf\";\nimport iconThunderstorm from \"../img/weather-icons/thunderstorm.png\";\n// import iconDizzle from \"../img/weather-icons/dizzle.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WeatherForcast(_ref) {\n  _s();\n  let {\n    data\n  } = _ref;\n  const [temperature, setTemperature] = useState(null);\n  const [status, setStatus] = useState(null);\n  const city = data.cityName || \"Gdańsk\";\n  const units = data.units || false;\n  WeatherAPIConf.API_CITY = city;\n  WeatherAPIConf.API_UNITS = units === false ? \"&units=metric\" : \"&units=imperial\";\n  let tempUnit = units === false ? \"°C\" : \"°F\";\n  let dateCurrent = new Date();\n  useEffect(() => {\n    const API_URL = WeatherAPIConf.API_LINK + WeatherAPIConf.API_CITY + WeatherAPIConf.API_UNITS + WeatherAPIConf.API_KEY;\n    let tabWeek = [];\n    console.log(API_URL);\n    axios.get(API_URL).then(res => {\n      for (let i = 0; i < 40; i++) {\n        let date = res.data.list[i].dt_txt;\n        let [datePart, timePart] = date.split(\" \");\n        let temperature = res.data.list[i].main[\"temp\"];\n        let pressure = res.data.list[i].main[\"pressure\"];\n        let humidity = res.data.list[i].main[\"humidity\"];\n        let status = res.data.list[i].weather[0][\"id\"];\n        tabWeek.push([datePart, timePart, temperature, pressure, humidity, status]);\n      }\n      setTemperature(Math.round(tabWeek[0][2]));\n      setStatus(tabWeek[0][5]);\n    }).catch(error => {\n      //console.error(\"Błąd pobierania prognozy pogody:\", error);\n    });\n  });\n  const getIcon = statusCode => {\n    if (statusCode >= 200 && statusCode < 300) {\n      return iconThunderstorm;\n    } else if (statusCode >= 300 && statusCode < 400) {\n      return iconDizzle;\n    } else if (statusCode >= 500 && statusCode < 600) {\n      return \"../img/weather-icons/rain.png\";\n    } else if (statusCode >= 600 && statusCode < 700) {\n      return \"../img/weather-icons/ice.png\";\n    } else if (statusCode >= 700 && statusCode < 800) {\n      return \"../img/weather-icons/fog.png\";\n    } else if (statusCode == 800) {\n      return \"../img/weather-icons/sun.png\";\n    } else if (statusCode > 800 && statusCode < 900) {\n      return \"../img/weather-icons/cloud.png\";\n    } else {\n      return \"../img/weather-icons/unknown.png\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date\",\n          children: [dateCurrent.toString().split(\" \")[0] + \" \", dateCurrent.toLocaleDateString(\"pl-PL\")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: WeatherAPIConf.API_CITY\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weatherData\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"temp\",\n              children: temperature + tempUnit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"temp\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: getIcon(200)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"exampleCity\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Search the wather\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n_s(WeatherForcast, \"TNC+opohGwMy2H2EZ8kvosZFnes=\");\n_c = WeatherForcast;\nexport default WeatherForcast;\nvar _c;\n$RefreshReg$(_c, \"WeatherForcast\");","map":{"version":3,"names":["logo","sun","React","useEffect","useState","axios","Link","WeatherAPI","Layout","WeatherAPIConf","iconThunderstorm","jsxDEV","_jsxDEV","WeatherForcast","_ref","_s","data","temperature","setTemperature","status","setStatus","city","cityName","units","API_CITY","API_UNITS","tempUnit","dateCurrent","Date","API_URL","API_LINK","API_KEY","tabWeek","console","log","get","then","res","i","date","list","dt_txt","datePart","timePart","split","main","pressure","humidity","weather","push","Math","round","catch","error","getIcon","statusCode","iconDizzle","children","className","toString","toLocaleDateString","fileName","_jsxFileName","lineNumber","columnNumber","class","src","id","_c","$RefreshReg$"],"sources":["C:/Users/SUPER PC/Desktop/weather-app/weather-app/src/pages/WeatherForcast.js"],"sourcesContent":["import logo from \"../img/logo2.png\";\r\nimport sun from \"../img/weather-icons/sun.png\";\r\nimport \"../App.css\";\r\nimport \"../styles/WeatherForcast-style.css\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport WeatherAPI from \"../scripts/WeatherAPI\";\r\nimport Layout from \"../layout/layout\";\r\nimport WeatherAPIConf from \"../scripts/WeatherAPIConf\";\r\nimport iconThunderstorm from\"../img/weather-icons/thunderstorm.png\";\r\n// import iconDizzle from \"../img/weather-icons/dizzle.png\";\r\n\r\n\r\n\r\n\r\n\r\nfunction WeatherForcast({ data }) {\r\n  const [temperature, setTemperature] = useState(null);\r\n  const [status, setStatus] = useState(null);\r\n\r\n  const city = data.cityName || \"Gdańsk\";\r\n  const units = data.units || false;\r\n\r\n  WeatherAPIConf.API_CITY = city;\r\n  WeatherAPIConf.API_UNITS =\r\n    units === false ? \"&units=metric\" : \"&units=imperial\";\r\n\r\n  let tempUnit = units === false ? \"°C\" : \"°F\";\r\n  let dateCurrent = new Date();\r\n\r\n  useEffect(() => {\r\n    const API_URL =\r\n      WeatherAPIConf.API_LINK +\r\n      WeatherAPIConf.API_CITY +\r\n      WeatherAPIConf.API_UNITS +\r\n      WeatherAPIConf.API_KEY;\r\n\r\n    let tabWeek = [];\r\n    console.log(API_URL);\r\n    axios\r\n      .get(API_URL)\r\n      .then((res) => {\r\n        for (let i = 0; i < 40; i++) {\r\n          let date = res.data.list[i].dt_txt;\r\n          let [datePart, timePart] = date.split(\" \");\r\n          let temperature = res.data.list[i].main[\"temp\"];\r\n          let pressure = res.data.list[i].main[\"pressure\"];\r\n          let humidity = res.data.list[i].main[\"humidity\"];\r\n          let status = res.data.list[i].weather[0][\"id\"];\r\n          tabWeek.push([\r\n            datePart,\r\n            timePart,\r\n            temperature,\r\n            pressure,\r\n            humidity,\r\n            status,\r\n          ]);\r\n        }\r\n        setTemperature(Math.round(tabWeek[0][2]));\r\n        setStatus(tabWeek[0][5]);\r\n      })\r\n      .catch((error) => {\r\n        //console.error(\"Błąd pobierania prognozy pogody:\", error);\r\n      });\r\n  });\r\n\r\n  const getIcon = (statusCode) => {\r\n    if (statusCode >= 200 && statusCode < 300) {\r\n      return iconThunderstorm;\r\n    } else if (statusCode >= 300 && statusCode < 400) {\r\n      return iconDizzle;\r\n    } else if (statusCode >= 500 && statusCode < 600) {\r\n      return \"../img/weather-icons/rain.png\";\r\n    } else if (statusCode >= 600 && statusCode < 700) {\r\n      return \"../img/weather-icons/ice.png\";\r\n    } else if (statusCode >= 700 && statusCode < 800) {\r\n      return \"../img/weather-icons/fog.png\";\r\n    } else if (statusCode == 800) {\r\n      return \"../img/weather-icons/sun.png\";\r\n    } else if (statusCode > 800 && statusCode < 900) {\r\n      return \"../img/weather-icons/cloud.png\";\r\n    } else {\r\n      return \"../img/weather-icons/unknown.png\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <section>\r\n        <div className=\"App-panel\">\r\n          <div className=\"date\">\r\n            {dateCurrent.toString().split(\" \")[0] + \" \"}\r\n            {dateCurrent.toLocaleDateString(\"pl-PL\")}\r\n          </div>\r\n          <div className=\"content\">\r\n            <h2>{WeatherAPIConf.API_CITY}</h2>\r\n            <div className=\"weatherData\">\r\n              <div class=\"temp\">{temperature + tempUnit}</div>\r\n              <div class=\"temp\"><img src={getIcon(200)}/></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div id=\"exampleCity\">\r\n          <h2>Search the wather</h2>\r\n        </div>\r\n      </section>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default WeatherForcast;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}