{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SUPER PC\\\\Desktop\\\\weather-app\\\\weather-app\\\\src\\\\pages\\\\WeatherForcast.js\";\nimport logo from \"../img/logo2.png\";\nimport sun from \"../img/weather-icons/sun.png\";\nimport \"../App.css\";\nimport \"../styles/WeatherForcast-style.css\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport WeatherAPI from \"../scripts/WeatherAPI\";\nimport Layout from \"../layout/layout\";\nimport WeatherAPIConf from \"../scripts/WeatherAPIConf\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WeatherForcast(_ref) {\n  let {\n    data\n  } = _ref;\n  const city = data.cityName || \"Gdańsk\";\n  const units = data.units || false;\n  WeatherAPIConf.API_CITY = city;\n  WeatherAPIConf.API_UNITS = data.units === false ? \"&units=metric\" : \"&units=imperial\";\n  let currentWeather = () => {\n    const API_URL = WeatherAPIConf.API_LINK + WeatherAPIConf.API_CITY + WeatherAPIConf.API_UNITS + WeatherAPIConf.API_KEY;\n    let tabWeek = [];\n    console.log(API_URL);\n    axios.get(API_URL).then(res => {\n      for (let i = 0; i < 40; i++) {\n        let date = res.data.list[i].dt_txt;\n        let [datePart, timePart] = date.split(\" \");\n        let temperature = res.data.list[i].main[\"temp\"];\n        let pressure = res.data.list[i].main[\"pressure\"];\n        let humidity = res.data.list[i].main[\"humidity\"];\n        let status = res.data.list[i].weather[0][\"id\"];\n        tabWeek.push([datePart, timePart, temperature, pressure, humidity, status]);\n      }\n      const temp = tabWeek[0][2];\n      console.log(temp);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: temp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this);\n    }).catch(error => {\n      //console.error(\"Błąd pobierania prognozy pogody:\", error);\n    });\n  };\n  let dateCurrent = new Date();\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date\",\n          children: [dateCurrent.toString().split(\" \")[0] + \" \", dateCurrent.toLocaleDateString(\"pl-PL\")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: WeatherAPIConf.API_CITY\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weatherData\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: currentWeather()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"exampleCity\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Search the wather\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_c = WeatherForcast;\nexport default WeatherForcast;\nvar _c;\n$RefreshReg$(_c, \"WeatherForcast\");","map":{"version":3,"names":["logo","sun","React","useState","axios","Link","WeatherAPI","Layout","WeatherAPIConf","jsxDEV","_jsxDEV","WeatherForcast","_ref","data","city","cityName","units","API_CITY","API_UNITS","currentWeather","API_URL","API_LINK","API_KEY","tabWeek","console","log","get","then","res","i","date","list","dt_txt","datePart","timePart","split","temperature","main","pressure","humidity","status","weather","push","temp","children","fileName","_jsxFileName","lineNumber","columnNumber","catch","error","dateCurrent","Date","className","toString","toLocaleDateString","id","_c","$RefreshReg$"],"sources":["C:/Users/SUPER PC/Desktop/weather-app/weather-app/src/pages/WeatherForcast.js"],"sourcesContent":["import logo from \"../img/logo2.png\";\r\nimport sun from \"../img/weather-icons/sun.png\";\r\nimport \"../App.css\";\r\nimport \"../styles/WeatherForcast-style.css\";\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport WeatherAPI from \"../scripts/WeatherAPI\";\r\nimport Layout from \"../layout/layout\";\r\nimport WeatherAPIConf from \"../scripts/WeatherAPIConf\";\r\n\r\nfunction WeatherForcast({ data }) {\r\n  \r\n  const city = data.cityName || \"Gdańsk\";\r\n  const units = data.units || false;\r\n  WeatherAPIConf.API_CITY = city;\r\n  WeatherAPIConf.API_UNITS =\r\n    data.units === false ? \"&units=metric\" : \"&units=imperial\";\r\n\r\n  let currentWeather = () => {\r\n    const API_URL =\r\n      WeatherAPIConf.API_LINK +\r\n      WeatherAPIConf.API_CITY +\r\n      WeatherAPIConf.API_UNITS +\r\n      WeatherAPIConf.API_KEY;\r\n\r\n    let tabWeek = [];\r\n    console.log(API_URL);\r\n    axios\r\n      .get(API_URL)\r\n      .then((res) => {\r\n        for (let i = 0; i < 40; i++) {\r\n          let date = res.data.list[i].dt_txt;\r\n          let [datePart, timePart] = date.split(\" \");\r\n          let temperature = res.data.list[i].main[\"temp\"];\r\n          let pressure = res.data.list[i].main[\"pressure\"];\r\n          let humidity = res.data.list[i].main[\"humidity\"];\r\n          let status = res.data.list[i].weather[0][\"id\"];\r\n          tabWeek.push([\r\n            datePart,\r\n            timePart,\r\n            temperature,\r\n            pressure,\r\n            humidity,\r\n            status,\r\n          ]);\r\n        }\r\n        const temp = tabWeek[0][2];\r\n        console.log(temp)\r\n        return(\r\n          <div>\r\n            <p>{temp}</p>\r\n          </div>\r\n        );\r\n        \r\n      })\r\n      .catch((error) => {\r\n        //console.error(\"Błąd pobierania prognozy pogody:\", error);\r\n      });\r\n  };\r\n  let dateCurrent = new Date();\r\n  return (\r\n    <Layout>\r\n      <section>\r\n        <div className=\"App-panel\">\r\n          <div className=\"date\">\r\n            {dateCurrent.toString().split(\" \")[0] + \" \"}\r\n            {dateCurrent.toLocaleDateString(\"pl-PL\")}\r\n          </div>\r\n          <div className=\"content\">\r\n            <h2>{WeatherAPIConf.API_CITY}</h2>\r\n            <div className=\"weatherData\">\r\n              <div>{currentWeather()}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div id=\"exampleCity\">\r\n          <h2>Search the wather</h2>\r\n        </div>\r\n      </section>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default WeatherForcast;\r\n"],"mappings":";AAAA,OAAOA,IAAI,MAAM,kBAAkB;AACnC,OAAOC,GAAG,MAAM,8BAA8B;AAC9C,OAAO,YAAY;AACnB,OAAO,oCAAoC;AAC3C,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,UAAU,MAAM,uBAAuB;AAC9C,OAAOC,MAAM,MAAM,kBAAkB;AACrC,OAAOC,cAAc,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,SAASC,cAAcA,CAAAC,IAAA,EAAW;EAAA,IAAV;IAAEC;EAAK,CAAC,GAAAD,IAAA;EAE9B,MAAME,IAAI,GAAGD,IAAI,CAACE,QAAQ,IAAI,QAAQ;EACtC,MAAMC,KAAK,GAAGH,IAAI,CAACG,KAAK,IAAI,KAAK;EACjCR,cAAc,CAACS,QAAQ,GAAGH,IAAI;EAC9BN,cAAc,CAACU,SAAS,GACtBL,IAAI,CAACG,KAAK,KAAK,KAAK,GAAG,eAAe,GAAG,iBAAiB;EAE5D,IAAIG,cAAc,GAAGA,CAAA,KAAM;IACzB,MAAMC,OAAO,GACXZ,cAAc,CAACa,QAAQ,GACvBb,cAAc,CAACS,QAAQ,GACvBT,cAAc,CAACU,SAAS,GACxBV,cAAc,CAACc,OAAO;IAExB,IAAIC,OAAO,GAAG,EAAE;IAChBC,OAAO,CAACC,GAAG,CAACL,OAAO,CAAC;IACpBhB,KAAK,CACFsB,GAAG,CAACN,OAAO,CAAC,CACZO,IAAI,CAAEC,GAAG,IAAK;MACb,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;QAC3B,IAAIC,IAAI,GAAGF,GAAG,CAACf,IAAI,CAACkB,IAAI,CAACF,CAAC,CAAC,CAACG,MAAM;QAClC,IAAI,CAACC,QAAQ,EAAEC,QAAQ,CAAC,GAAGJ,IAAI,CAACK,KAAK,CAAC,GAAG,CAAC;QAC1C,IAAIC,WAAW,GAAGR,GAAG,CAACf,IAAI,CAACkB,IAAI,CAACF,CAAC,CAAC,CAACQ,IAAI,CAAC,MAAM,CAAC;QAC/C,IAAIC,QAAQ,GAAGV,GAAG,CAACf,IAAI,CAACkB,IAAI,CAACF,CAAC,CAAC,CAACQ,IAAI,CAAC,UAAU,CAAC;QAChD,IAAIE,QAAQ,GAAGX,GAAG,CAACf,IAAI,CAACkB,IAAI,CAACF,CAAC,CAAC,CAACQ,IAAI,CAAC,UAAU,CAAC;QAChD,IAAIG,MAAM,GAAGZ,GAAG,CAACf,IAAI,CAACkB,IAAI,CAACF,CAAC,CAAC,CAACY,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAC9ClB,OAAO,CAACmB,IAAI,CAAC,CACXT,QAAQ,EACRC,QAAQ,EACRE,WAAW,EACXE,QAAQ,EACRC,QAAQ,EACRC,MAAM,CACP,CAAC;MACJ;MACA,MAAMG,IAAI,GAAGpB,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC1BC,OAAO,CAACC,GAAG,CAACkB,IAAI,CAAC;MACjB,oBACEjC,OAAA;QAAAkC,QAAA,eACElC,OAAA;UAAAkC,QAAA,EAAID;QAAI;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC;IAGV,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChB;IAAA,CACD,CAAC;EACN,CAAC;EACD,IAAIC,WAAW,GAAG,IAAIC,IAAI,CAAC,CAAC;EAC5B,oBACE1C,OAAA,CAACH,MAAM;IAAAqC,QAAA,eACLlC,OAAA;MAAAkC,QAAA,gBACElC,OAAA;QAAK2C,SAAS,EAAC,WAAW;QAAAT,QAAA,gBACxBlC,OAAA;UAAK2C,SAAS,EAAC,MAAM;UAAAT,QAAA,GAClBO,WAAW,CAACG,QAAQ,CAAC,CAAC,CAACnB,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,EAC1CgB,WAAW,CAACI,kBAAkB,CAAC,OAAO,CAAC;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrC,CAAC,eACNtC,OAAA;UAAK2C,SAAS,EAAC,SAAS;UAAAT,QAAA,gBACtBlC,OAAA;YAAAkC,QAAA,EAAKpC,cAAc,CAACS;UAAQ;YAAA4B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAClCtC,OAAA;YAAK2C,SAAS,EAAC,aAAa;YAAAT,QAAA,eAC1BlC,OAAA;cAAAkC,QAAA,EAAMzB,cAAc,CAAC;YAAC;cAAA0B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAENtC,OAAA;QAAK8C,EAAE,EAAC,aAAa;QAAAZ,QAAA,eACnBlC,OAAA;UAAAkC,QAAA,EAAI;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEb;AAACS,EAAA,GAxEQ9C,cAAc;AA0EvB,eAAeA,cAAc;AAAC,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}