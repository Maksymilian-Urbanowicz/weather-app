{"ast":null,"code":"import React from \"react\";\nimport axios from \"axios\";\nfunction WeatherAPI(cityName, units) {\n  const API_LINK = \"https://api.openweathermap.org/data/2.5/forecast?q=\";\n  const API_CITY = cityName || \"Gdańsk\";\n  const API_KEY = \"&appid=27e27f3b62720afb770645ec7ae89aa7\";\n  const API_UNITS = units === false ? \"&units=metric\" : \"&units=imperial\";\n  const API_LANG = \"&lang=pl\";\n  const API_URL = API_LINK + API_CITY + API_UNITS + API_KEY;\n  axios.get(API_URL).then(res => {\n    let morning = 2;\n    let afternoon = 4;\n    let evening = 6;\n    let night = 7;\n    let dayTab = [afternoon, night];\n    console.log(res.data);\n    for (let j = 0; j <= 32; j += 8) {\n      for (let i = 0; i < dayTab.length; i += 2) {\n        console.log(j);\n        console.log(res.data.list[dayTab[i] + j]);\n        console.log(res.data.list[dayTab[i] + j].main[\"preasure\"]); //ciśnienie,\n        console.log(res.data.list[dayTab[i] + j].main[\"humidity\"]); //wilgotność\n        console.log(res.data.list[dayTab[i] + j].main[\"temp\"]); //temperatura\n        console.log(res.data.list[dayTab[i] + j].weather[\"id\"]); //status pogody - ikona\n        console.log(res.data.list[dayTab[i] + j].dt_txt); //status pogody - ikona\n        let date = res.data.list[dayTab[i] + j].dt_txt;\n        date = date.slice(0, 10);\n        let tempMor = res.data.list[dayTab[i] + j].main[\"temp\"];\n        let tempEvn = res.data.list[dayTab[i + 1] + j].main[\"temp\"];\n      }\n    }\n\n    // console.log(res.data.list[afternoon]);\n    // console.log(res.data.list[evening]);\n    // console.log(res.data.list[night]);\n    //console.log(res.data.main['temp']);\n  }).catch(error => {\n    console.error(\"Błąd pobierania prognozy pogody:\", error);\n  });\n}\n_c = WeatherAPI;\nexport default WeatherAPI;\nvar _c;\n$RefreshReg$(_c, \"WeatherAPI\");","map":{"version":3,"names":["React","axios","WeatherAPI","cityName","units","API_LINK","API_CITY","API_KEY","API_UNITS","API_LANG","API_URL","get","then","res","morning","afternoon","evening","night","dayTab","console","log","data","j","i","length","list","main","weather","dt_txt","date","slice","tempMor","tempEvn","catch","error","_c","$RefreshReg$"],"sources":["C:/Users/SUPER PC/Desktop/weather-app/weather-app/src/scripts/WeatherAPI.js"],"sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction WeatherAPI(cityName, units) {\r\n  const API_LINK = \"https://api.openweathermap.org/data/2.5/forecast?q=\";\r\n  const API_CITY = cityName || \"Gdańsk\";\r\n  const API_KEY = \"&appid=27e27f3b62720afb770645ec7ae89aa7\";\r\n  const API_UNITS = units === false ? \"&units=metric\" : \"&units=imperial\";\r\n  const API_LANG = \"&lang=pl\";\r\n\r\n  const API_URL = API_LINK + API_CITY + API_UNITS + API_KEY;\r\n\r\n  axios\r\n    .get(API_URL)\r\n    .then((res) => {\r\n      let morning = 2;\r\n      let afternoon = 4;\r\n      let evening = 6;\r\n      let night = 7;\r\n      let dayTab = [afternoon, night];\r\n      console.log(res.data);\r\n      \r\n        for (let j = 0; j <= 32; j += 8) {\r\n          for (let i = 0; i < dayTab.length; i+=2) {\r\n          console.log(j);\r\n          console.log(res.data.list[dayTab[i] + j]);\r\n          console.log(res.data.list[dayTab[i] + j].main[\"preasure\"]); //ciśnienie,\r\n          console.log(res.data.list[dayTab[i] + j].main[\"humidity\"]); //wilgotność\r\n          console.log(res.data.list[dayTab[i] + j].main[\"temp\"]); //temperatura\r\n          console.log(res.data.list[dayTab[i] + j].weather[\"id\"]); //status pogody - ikona\r\n          console.log(res.data.list[dayTab[i] + j].dt_txt); //status pogody - ikona\r\n          let date = res.data.list[dayTab[i] + j].dt_txt;\r\n          date=date.slice(0,10);\r\n          let tempMor = res.data.list[dayTab[i] + j].main[\"temp\"];\r\n          let tempEvn = res.data.list[dayTab[i+1] + j].main[\"temp\"];\r\n         \r\n        }\r\n\r\n      }\r\n\r\n      // console.log(res.data.list[afternoon]);\r\n      // console.log(res.data.list[evening]);\r\n      // console.log(res.data.list[night]);\r\n      //console.log(res.data.main['temp']);\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Błąd pobierania prognozy pogody:\", error);\r\n    });\r\n}\r\n\r\nexport default WeatherAPI;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}