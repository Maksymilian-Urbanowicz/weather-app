{"ast":null,"code":"import React from \"react\";\nimport axios from \"axios\";\nfunction WeatherAPI(cityName, units) {\n  const API_LINK = \"https://api.openweathermap.org/data/2.5/forecast?q=\";\n  const API_CITY = cityName || \"Gdańsk\";\n  const API_KEY = \"&appid=27e27f3b62720afb770645ec7ae89aa7\";\n  const API_UNITS = units === false ? \"&units=metric\" : \"&units=imperial\";\n  const API_LANG = \"&lang=pl\";\n  const API_URL = API_LINK + API_CITY + API_UNITS + API_KEY;\n  axios.get(API_URL).then(res => {\n    let morning = 3;\n    let afternoon = 5;\n    let evening = 7;\n    let night = 8;\n    let dayTab = [morning, afternoon, evening, night];\n    for (let i = 0; i < dayTab.length; i++) {\n      for (let j = 0; j <= 40; j += 8) {\n        console.log(res.data);\n        console.log(dayTab[i]);\n        console.log(res.data.list[dayTab[i]]);\n        console.log(res.data.list[dayTab[i]].main[\"preasure\"]); //ciśnienie,\n        console.log(res.data.list[dayTab[i]].main[\"humidity\"]); //wilgotność\n        console.log(res.data.list[dayTab[i]].main[\"temp\"]); //temperatura\n        console.log(res.data.list[dayTab[i]].weather[\"id\"]); //status pogody - ikona\n      }\n    }\n\n    console.log(res.data.list[afternoon]);\n    console.log(res.data.list[evening]);\n    console.log(res.data.list[night]);\n    //console.log(res.data.main['temp']);\n  }).catch(error => {\n    console.error(\"Błąd pobierania prognozy pogody:\", error);\n  });\n}\n_c = WeatherAPI;\nexport default WeatherAPI;\nvar _c;\n$RefreshReg$(_c, \"WeatherAPI\");","map":{"version":3,"names":["React","axios","WeatherAPI","cityName","units","API_LINK","API_CITY","API_KEY","API_UNITS","API_LANG","API_URL","get","then","res","morning","afternoon","evening","night","dayTab","i","length","j","console","log","data","list","main","weather","catch","error","_c","$RefreshReg$"],"sources":["C:/Users/SUPER PC/Desktop/weather-app/weather-app/src/scripts/WeatherAPI.js"],"sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction WeatherAPI(cityName, units) {\r\n  const API_LINK = \"https://api.openweathermap.org/data/2.5/forecast?q=\";\r\n  const API_CITY = cityName || \"Gdańsk\";\r\n  const API_KEY = \"&appid=27e27f3b62720afb770645ec7ae89aa7\";\r\n  const API_UNITS = units === false ? \"&units=metric\" : \"&units=imperial\";\r\n  const API_LANG = \"&lang=pl\";\r\n\r\n  const API_URL = API_LINK + API_CITY + API_UNITS + API_KEY;\r\n\r\n  axios\r\n    .get(API_URL)\r\n    .then((res) => {\r\n      let morning = 3;\r\n      let afternoon = 5;\r\n      let evening = 7;\r\n      let night = 8;\r\n      let dayTab = [morning, afternoon, evening, night];\r\n\r\n      for (let i = 0; i < dayTab.length; i++) {\r\n        for (let j = 0; j <= 40; j+=8) {\r\n          console.log(res.data);\r\n          console.log(dayTab[i]);\r\n          console.log(res.data.list[dayTab[i]]);\r\n          console.log(res.data.list[dayTab[i]].main[\"preasure\"]); //ciśnienie,\r\n          console.log(res.data.list[dayTab[i]].main[\"humidity\"]); //wilgotność\r\n          console.log(res.data.list[dayTab[i]].main[\"temp\"]); //temperatura\r\n          console.log(res.data.list[dayTab[i]].weather[\"id\"]); //status pogody - ikona\r\n        }\r\n      }\r\n\r\n      console.log(res.data.list[afternoon]);\r\n      console.log(res.data.list[evening]);\r\n      console.log(res.data.list[night]);\r\n      //console.log(res.data.main['temp']);\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Błąd pobierania prognozy pogody:\", error);\r\n    });\r\n}\r\n\r\nexport default WeatherAPI;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,UAAUA,CAACC,QAAQ,EAAEC,KAAK,EAAE;EACnC,MAAMC,QAAQ,GAAG,qDAAqD;EACtE,MAAMC,QAAQ,GAAGH,QAAQ,IAAI,QAAQ;EACrC,MAAMI,OAAO,GAAG,yCAAyC;EACzD,MAAMC,SAAS,GAAGJ,KAAK,KAAK,KAAK,GAAG,eAAe,GAAG,iBAAiB;EACvE,MAAMK,QAAQ,GAAG,UAAU;EAE3B,MAAMC,OAAO,GAAGL,QAAQ,GAAGC,QAAQ,GAAGE,SAAS,GAAGD,OAAO;EAEzDN,KAAK,CACFU,GAAG,CAACD,OAAO,CAAC,CACZE,IAAI,CAAEC,GAAG,IAAK;IACb,IAAIC,OAAO,GAAG,CAAC;IACf,IAAIC,SAAS,GAAG,CAAC;IACjB,IAAIC,OAAO,GAAG,CAAC;IACf,IAAIC,KAAK,GAAG,CAAC;IACb,IAAIC,MAAM,GAAG,CAACJ,OAAO,EAAEC,SAAS,EAAEC,OAAO,EAAEC,KAAK,CAAC;IAEjD,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,MAAM,CAACE,MAAM,EAAED,CAAC,EAAE,EAAE;MACtC,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,EAAE,EAAEA,CAAC,IAAE,CAAC,EAAE;QAC7BC,OAAO,CAACC,GAAG,CAACV,GAAG,CAACW,IAAI,CAAC;QACrBF,OAAO,CAACC,GAAG,CAACL,MAAM,CAACC,CAAC,CAAC,CAAC;QACtBG,OAAO,CAACC,GAAG,CAACV,GAAG,CAACW,IAAI,CAACC,IAAI,CAACP,MAAM,CAACC,CAAC,CAAC,CAAC,CAAC;QACrCG,OAAO,CAACC,GAAG,CAACV,GAAG,CAACW,IAAI,CAACC,IAAI,CAACP,MAAM,CAACC,CAAC,CAAC,CAAC,CAACO,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;QACxDJ,OAAO,CAACC,GAAG,CAACV,GAAG,CAACW,IAAI,CAACC,IAAI,CAACP,MAAM,CAACC,CAAC,CAAC,CAAC,CAACO,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;QACxDJ,OAAO,CAACC,GAAG,CAACV,GAAG,CAACW,IAAI,CAACC,IAAI,CAACP,MAAM,CAACC,CAAC,CAAC,CAAC,CAACO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACpDJ,OAAO,CAACC,GAAG,CAACV,GAAG,CAACW,IAAI,CAACC,IAAI,CAACP,MAAM,CAACC,CAAC,CAAC,CAAC,CAACQ,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;MACvD;IACF;;IAEAL,OAAO,CAACC,GAAG,CAACV,GAAG,CAACW,IAAI,CAACC,IAAI,CAACV,SAAS,CAAC,CAAC;IACrCO,OAAO,CAACC,GAAG,CAACV,GAAG,CAACW,IAAI,CAACC,IAAI,CAACT,OAAO,CAAC,CAAC;IACnCM,OAAO,CAACC,GAAG,CAACV,GAAG,CAACW,IAAI,CAACC,IAAI,CAACR,KAAK,CAAC,CAAC;IACjC;EACF,CAAC,CAAC,CACDW,KAAK,CAAEC,KAAK,IAAK;IAChBP,OAAO,CAACO,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;EAC1D,CAAC,CAAC;AACN;AAACC,EAAA,GAtCQ5B,UAAU;AAwCnB,eAAeA,UAAU;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}