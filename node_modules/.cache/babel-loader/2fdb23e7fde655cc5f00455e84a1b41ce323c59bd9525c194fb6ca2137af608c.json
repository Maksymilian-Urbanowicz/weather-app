{"ast":null,"code":"import React from \"react\";\nimport axios from \"axios\";\nfunction WeatherAPI(cityName, units) {\n  const API_LINK = \"https://api.openweathermap.org/data/2.5/forecast?q=\";\n  const API_CITY = \"Gdańsk\";\n  const API_KEY = \"&appid=27e27f3b62720afb770645ec7ae89aa7\";\n  const API_UNITS = units === false ? \"&units=metric\" : \"&units=imperial\";\n  const API_LANG = \"&lang=pl\";\n  const API_URL = API_LINK + API_CITY + API_UNITS + API_KEY;\n  let tabWeek = [];\n  axios.get(API_URL).then(res => {\n    let morning = 2;\n    let afternoon = 4;\n    let evening = 6;\n    let night = 7;\n    let dayTab = [afternoon, night];\n    console.log(res.data);\n    for (let j = 0; j < 32; j += 8) {\n      // for (let i = 0; i < dayTab.length; i+=2) {\n      console.log(j);\n      console.log(res.data.list[dayTab[0] + j]);\n      console.log(res.data.list[dayTab[0] + j].main[\"preasure\"]); //ciśnienie,\n      console.log(res.data.list[dayTab[0] + j].main[\"humidity\"]); //wilgotność\n      console.log(res.data.list[dayTab[0] + j].main[\"temp\"]); //temperatura\n      console.log(res.data.list[dayTab[0] + j].weather[\"id\"]); //status pogody - ikona\n      console.log(res.data.list[dayTab[0] + j].dt_txt); //status pogody - ikona\n\n      let status = res.data.list[dayTab[0] + j].weather[\"id\"];\n      let humidity = res.data.list[dayTab[0] + j].main[\"humidity\"];\n      let preasure = res.data.list[dayTab[0] + j].main[\"preasure\"];\n      let date = res.data.list[dayTab[0] + j].dt_txt;\n      date = date.slice(0, 10);\n      let tempMor = res.data.list[dayTab[0] + j].main[\"temp\"];\n      let tempEvn = res.data.list[dayTab[1] + j].main[\"temp\"];\n      let tabDay = [date, tempMor, tempEvn, preasure, humidity, status];\n      tabWeek.push(tabDay);\n\n      // return (\n      //   <div id=\"exampleCity\">\n      //     <div key={j - 7} className=\"App-panel2\">\n      //       <h3>{date}</h3>\n      //       <div className=\"App-degree\">\n      //         <p>tempMor&deg;C / tempEvn&deg;C</p>\n      //       </div>\n      //       <div>\n      //         {/* <img src={sun} alt=\"sun\" className=\"App-icon\" /> */}\n      //       </div>\n      //     </div>\n      //   </div>\n      // );\n      //}\n    }\n    //return tabWeek;\n    // console.log(res.data.list[afternoon]);\n    // console.log(res.data.list[evening]);\n    // console.log(res.data.list[night]);\n    //console.log(res.data.main['temp']);\n  }).catch(error => {\n    console.error(\"Błąd pobierania prognozy pogody:\", error);\n  });\n  return tabWeek;\n  //  return (\n  //    <div id=\"exampleCity\">\n  //      <div className=\"App-panel2\">\n  //        <h3>XD</h3>\n  //        <div className=\"App-degree\">\n  //          <p>tempMor&deg;C / tempEvn&deg;C</p>\n  //        </div>\n  //        <div>{/* <img src={sun} alt=\"sun\" className=\"App-icon\" /> */}</div>\n  //      </div>\n  //    </div>\n  //  );\n}\n_c = WeatherAPI;\nexport default WeatherAPI;\nvar _c;\n$RefreshReg$(_c, \"WeatherAPI\");","map":{"version":3,"names":["React","axios","WeatherAPI","cityName","units","API_LINK","API_CITY","API_KEY","API_UNITS","API_LANG","API_URL","tabWeek","get","then","res","morning","afternoon","evening","night","dayTab","console","log","data","j","list","main","weather","dt_txt","status","humidity","preasure","date","slice","tempMor","tempEvn","tabDay","push","catch","error","_c","$RefreshReg$"],"sources":["C:/Users/SUPER PC/Desktop/weather-app/weather-app/src/scripts/WeatherAPI.js"],"sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction WeatherAPI(cityName, units) {\r\n  const API_LINK = \"https://api.openweathermap.org/data/2.5/forecast?q=\";\r\n  const API_CITY = \"Gdańsk\";\r\n  const API_KEY = \"&appid=27e27f3b62720afb770645ec7ae89aa7\";\r\n  const API_UNITS = units === false ? \"&units=metric\" : \"&units=imperial\";\r\n  const API_LANG = \"&lang=pl\";\r\n\r\n  const API_URL = API_LINK + API_CITY + API_UNITS + API_KEY;\r\n  let tabWeek = [];\r\n  axios\r\n    .get(API_URL)\r\n    .then((res) => {\r\n      let morning = 2;\r\n      let afternoon = 4;\r\n      let evening = 6;\r\n      let night = 7;\r\n      let dayTab = [afternoon, night];\r\n      console.log(res.data);\r\n\r\n      for (let j = 0; j < 32; j += 8) {\r\n        // for (let i = 0; i < dayTab.length; i+=2) {\r\n        console.log(j);\r\n        console.log(res.data.list[dayTab[0] + j]);\r\n        console.log(res.data.list[dayTab[0] + j].main[\"preasure\"]); //ciśnienie,\r\n        console.log(res.data.list[dayTab[0] + j].main[\"humidity\"]); //wilgotność\r\n        console.log(res.data.list[dayTab[0] + j].main[\"temp\"]); //temperatura\r\n        console.log(res.data.list[dayTab[0] + j].weather[\"id\"]); //status pogody - ikona\r\n        console.log(res.data.list[dayTab[0] + j].dt_txt); //status pogody - ikona\r\n\r\n        let status = res.data.list[dayTab[0] + j].weather[\"id\"];\r\n        let humidity = res.data.list[dayTab[0] + j].main[\"humidity\"];\r\n        let preasure = res.data.list[dayTab[0] + j].main[\"preasure\"];\r\n        let date = res.data.list[dayTab[0] + j].dt_txt;\r\n        date = date.slice(0, 10);\r\n\r\n        let tempMor = res.data.list[dayTab[0] + j].main[\"temp\"];\r\n        let tempEvn = res.data.list[dayTab[1] + j].main[\"temp\"];\r\n\r\n        let tabDay = [date, tempMor, tempEvn, preasure, humidity, status];\r\n\r\n        tabWeek.push(tabDay);\r\n\r\n        // return (\r\n        //   <div id=\"exampleCity\">\r\n        //     <div key={j - 7} className=\"App-panel2\">\r\n        //       <h3>{date}</h3>\r\n        //       <div className=\"App-degree\">\r\n        //         <p>tempMor&deg;C / tempEvn&deg;C</p>\r\n        //       </div>\r\n        //       <div>\r\n        //         {/* <img src={sun} alt=\"sun\" className=\"App-icon\" /> */}\r\n        //       </div>\r\n        //     </div>\r\n        //   </div>\r\n        // );\r\n        //}\r\n      }\r\n      //return tabWeek;\r\n      // console.log(res.data.list[afternoon]);\r\n      // console.log(res.data.list[evening]);\r\n      // console.log(res.data.list[night]);\r\n      //console.log(res.data.main['temp']);\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Błąd pobierania prognozy pogody:\", error);\r\n    });\r\n\r\n  return tabWeek;\r\n  //  return (\r\n  //    <div id=\"exampleCity\">\r\n  //      <div className=\"App-panel2\">\r\n  //        <h3>XD</h3>\r\n  //        <div className=\"App-degree\">\r\n  //          <p>tempMor&deg;C / tempEvn&deg;C</p>\r\n  //        </div>\r\n  //        <div>{/* <img src={sun} alt=\"sun\" className=\"App-icon\" /> */}</div>\r\n  //      </div>\r\n  //    </div>\r\n  //  );\r\n}\r\n\r\nexport default WeatherAPI;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}