{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SUPER PC\\\\Desktop\\\\weather-app\\\\weather-app\\\\src\\\\pages\\\\WeatherForcast.js\";\nimport logo from \"../img/logo2.png\";\nimport sun from \"../img/weather-icons/sun.png\";\nimport \"../App.css\";\nimport \"../styles/WeatherForcast-style.css\";\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport WeatherAPI from \"../scripts/WeatherAPI\";\nimport Layout from \"../layout/layout\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WeatherForcast(_ref) {\n  let {\n    data\n  } = _ref;\n  let cityName = data.cityName || \"Gdańsk\";\n  let cityWeather = WeatherAPI(data.cityName, data.units);\n  let dateCurrent = new Date();\n  cityWeather.forEach(data => {\n    const date = data[0];\n    const time = data[1];\n    const temperature = data[2];\n    const pressure = data[3];\n    const humidity = data[4];\n    const cloudCode = data[5];\n\n    // Przetwarzanie danych lub wyświetlanie\n    console.log(\"Data:\", date);\n    console.log(\"Czas:\", time);\n    console.log(\"Temperatura:\", temperature);\n    console.log(\"Ciśnienie:\", pressure);\n    console.log(\"Wilgotność:\", humidity);\n    console.log(\"Kod chmur:\", cloudCode);\n  });\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date\",\n          children: [dateCurrent.toString().split(\" \")[0] + \" \", dateCurrent.toLocaleDateString(\"pl-PL\")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: cityName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weatherData\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"exampleCity\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Search the wather\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_c = WeatherForcast;\nexport default WeatherForcast;\nvar _c;\n$RefreshReg$(_c, \"WeatherForcast\");","map":{"version":3,"names":["logo","sun","React","useState","Link","WeatherAPI","Layout","jsxDEV","_jsxDEV","WeatherForcast","_ref","data","cityName","cityWeather","units","dateCurrent","Date","forEach","date","time","temperature","pressure","humidity","cloudCode","console","log","children","className","toString","split","toLocaleDateString","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["C:/Users/SUPER PC/Desktop/weather-app/weather-app/src/pages/WeatherForcast.js"],"sourcesContent":["import logo from \"../img/logo2.png\";\r\nimport sun from \"../img/weather-icons/sun.png\";\r\nimport \"../App.css\";\r\nimport \"../styles/WeatherForcast-style.css\";\r\nimport React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport WeatherAPI from \"../scripts/WeatherAPI\";\r\nimport Layout from \"../layout/layout\";\r\n\r\nfunction WeatherForcast({ data }) {\r\n  let cityName = data.cityName || \"Gdańsk\";\r\n  let cityWeather = WeatherAPI(data.cityName, data.units);\r\n  let dateCurrent = new Date();\r\n  cityWeather.forEach((data) => {\r\n    const date = data[0];\r\n    const time = data[1];\r\n    const temperature = data[2];\r\n    const pressure = data[3];\r\n    const humidity = data[4];\r\n    const cloudCode = data[5];\r\n\r\n    // Przetwarzanie danych lub wyświetlanie\r\n    console.log(\"Data:\", date);\r\n    console.log(\"Czas:\", time);\r\n    console.log(\"Temperatura:\", temperature);\r\n    console.log(\"Ciśnienie:\", pressure);\r\n    console.log(\"Wilgotność:\", humidity);\r\n    console.log(\"Kod chmur:\", cloudCode);\r\n  });\r\n  return (\r\n    <Layout>\r\n      <section>\r\n        <div className=\"App-panel\">\r\n          <div className=\"date\">\r\n            {dateCurrent.toString().split(\" \")[0] + \" \"}\r\n            {dateCurrent.toLocaleDateString(\"pl-PL\")}\r\n          </div>\r\n          <div className=\"content\">\r\n            <h2>{cityName}</h2>\r\n            <div className=\"weatherData\">\r\n              <div>{}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div id=\"exampleCity\">\r\n          <h2>Search the wather</h2>\r\n        </div>\r\n      </section>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default WeatherForcast;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}