{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nfunction WeatherAPI(cityName, units) {\n  _s();\n  const [response, setResponse] = useState([]);\n  const API_LINK = \"https://api.openweathermap.org/data/2.5/forecast?q=\";\n  const API_CITY = cityName || \"Gdańsk\";\n  const API_KEY = \"&appid=27e27f3b62720afb770645ec7ae89aa7\";\n  const API_UNITS = units.checked === false ? \"&units=metric\" : \"&units=imperial\";\n  const API_LANG = \"&lang=pl\";\n  const API_CROSS = \"https://cors-anywhere.herokuapp.com/\";\n  const API_URL = API_CROSS + API_LINK + API_CITY + API_UNITS + API_KEY;\n  useEffect(() => {\n    async function getData() {\n      const response = await fetch(API_URL);\n      const data = await response.json();\n      setResponse(data);\n      console.log(data);\n    }\n    getData();\n  });\n}\n_s(WeatherAPI, \"SpAZrutwi0PdOrMSbhfjoxpt2XU=\");\n_c = WeatherAPI;\nexport default WeatherAPI;\nvar _c;\n$RefreshReg$(_c, \"WeatherAPI\");","map":{"version":3,"names":["React","useEffect","useState","WeatherAPI","cityName","units","_s","response","setResponse","API_LINK","API_CITY","API_KEY","API_UNITS","checked","API_LANG","API_CROSS","API_URL","getData","fetch","data","json","console","log","_c","$RefreshReg$"],"sources":["C:/Users/SUPER PC/Desktop/weather-app/weather-app/src/scripts/WeatherAPI.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nfunction WeatherAPI(cityName, units) {\r\n  const [response, setResponse] = useState([]);\r\n\r\n  \r\n\r\n  const API_LINK = \"https://api.openweathermap.org/data/2.5/forecast?q=\";\r\n  const API_CITY = cityName || \"Gdańsk\";\r\n  const API_KEY = \"&appid=27e27f3b62720afb770645ec7ae89aa7\";\r\n  const API_UNITS =\r\n    units.checked === false ? \"&units=metric\" : \"&units=imperial\";\r\n  const API_LANG = \"&lang=pl\";\r\n  const API_CROSS = \"https://cors-anywhere.herokuapp.com/\";\r\n\r\n  const API_URL = API_CROSS + API_LINK + API_CITY + API_UNITS + API_KEY;\r\n\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      const response = await fetch(API_URL);\r\n      const data = await response.json();\r\n      setResponse(data);\r\n      console.log(data);\r\n    }\r\n    getData();\r\n  },); \r\n}\r\n\r\nexport default WeatherAPI;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAElD,SAASC,UAAUA,CAACC,QAAQ,EAAEC,KAAK,EAAE;EAAAC,EAAA;EACnC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAI5C,MAAMO,QAAQ,GAAG,qDAAqD;EACtE,MAAMC,QAAQ,GAAGN,QAAQ,IAAI,QAAQ;EACrC,MAAMO,OAAO,GAAG,yCAAyC;EACzD,MAAMC,SAAS,GACbP,KAAK,CAACQ,OAAO,KAAK,KAAK,GAAG,eAAe,GAAG,iBAAiB;EAC/D,MAAMC,QAAQ,GAAG,UAAU;EAC3B,MAAMC,SAAS,GAAG,sCAAsC;EAExD,MAAMC,OAAO,GAAGD,SAAS,GAAGN,QAAQ,GAAGC,QAAQ,GAAGE,SAAS,GAAGD,OAAO;EAGrEV,SAAS,CAAC,MAAM;IACd,eAAegB,OAAOA,CAAA,EAAG;MACvB,MAAMV,QAAQ,GAAG,MAAMW,KAAK,CAACF,OAAO,CAAC;MACrC,MAAMG,IAAI,GAAG,MAAMZ,QAAQ,CAACa,IAAI,CAAC,CAAC;MAClCZ,WAAW,CAACW,IAAI,CAAC;MACjBE,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;IACnB;IACAF,OAAO,CAAC,CAAC;EACX,CAAE,CAAC;AACL;AAACX,EAAA,CAzBQH,UAAU;AAAAoB,EAAA,GAAVpB,UAAU;AA2BnB,eAAeA,UAAU;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}